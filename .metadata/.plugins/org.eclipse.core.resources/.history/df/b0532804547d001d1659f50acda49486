import java.util.Scanner;   
import java.util.Stack;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;


public class IT391_Cirelli_unit2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        //*********************************************************
        //****Assignment 2, Part A, Section 1
        //*********************************************************
        System.out.printf("\n"); 
        System.out.printf("**********Part A: Section 1 **********\n");
        System.out.printf("\n");
        System.out.printf("Enter any word and hit enter to see the word reversed: ");
        
        Scanner scanner = new Scanner(System.in);
        String str = scanner.nextLine();
        System.out.printf("\nYour word in reverse is: " + revString(str) + "\n");
        
        

        //*********************************************************
        //****Assignment 2, Part A, Section 2
        //*********************************************************
        System.out.printf("\n");
        System.out.printf("**********Part A: Section 2 **********\n");
        System.out.printf("\n");
        
        //Create the queue object from LinkedList class for more flexibility
        Queue<String> customers = new LinkedList<String>();

        //Load the queue with names
        customers.add("Jane");
        customers.add("Bob");
        customers.add("Liza");
        customers.add("Tom");
        customers.add("Mary");

        System.out.printf("The number of shoppers at the grocery store is, " + customers.size() + "\n");
        System.out.printf("The first shopper in line is, " + customers.peek() + "\n");
        
        customers.add("Stephen");
        customers.add("Ellen");

        customers.remove();
        customers.remove();
        customers.remove();
        System.out.printf("The number of shoppers now in line is, " + customers.size() + "\n");
        System.out.printf("The shopper currently first in line is, " + customers.peek() + "\n");
        
        scanner.nextLine();

        //*********************************************************
        //****Assignment 2, Part B, Section 1
        //*********************************************************
        System.out.printf("\n");
        System.out.printf("**********Part A: Section 2 **********\n");
        System.out.printf("\n");
        
        customers.add("Jim");
        customers.add("Bob");
        customers.add("Susan");
        customers.add("Liz");
        customers.add("Alex");
        
        System.out.printf("The number of people in line at the bank is, " + customers.size() + "\n");
        System.out.printf("The names of those in line at the bank are, " + customers.peek() + "\n");
        System.out.printf("The first customer in line is, " + customers.peek() + "\n");
                    
        customers.add("Andy");
        customers.add("Rhonda");
        
        customers.remove();
        customers.remove();
        customers.remove();
        
        System.out.printf("The number of customers in line now is, " + customers.peek() + "\n");
        
        
        //*********************************************************
        //****Assignment 2, Part B, Section 2
        //*********************************************************
        System.out.printf("\n");
        System.out.printf("**********Part A: Section 2 **********\n");
        System.out.printf("\n");
        System.out.printf("Please enter a sentence: ");
        
        Scanner scanner2 = new Scanner(System.in);
        String str2 = scanner2.nextLine();
        System.out.printf("\nYour word in reverse is: " + revString(str2) + "\n");
        
    }


	 private static String revString(String str)
	    {
	        Stack<String> wordStack = new Stack<String>();


	        for (int i = 0; i < str.length(); i++)
	            wordStack.push(str.substring(i, i+1));
	        String reversed = "";
	        for (int i = 0; i < str.length(); i++)
	            reversed += wordStack.pop();
	        return reversed;

		}
    
	 private static String reverseWord(String str)
	    {
	        Stack<String> wordStack = new Stack<String>();


	        for (int i = 0; i < str.length(); i++)
	            wordStack.push(str.substring(i, i+1));
	        String reversed = "";
	        for (int i = 0; i < str.length(); i++)
	            reversed += wordStack.pop();
	        return reversed;

		}
   
}
